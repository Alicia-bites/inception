# evite les messages d'erreur
events {}

http {
	server {
		# ici, comme on n'a precise que le port,
		# nginx met l'adresse IP par defaut,
		# --> 0.0.0.0:443
		# ici ssl est une socket Unix
		listen 443 ssl;
		listen [::]:443 ssl;

		# La directive server name permet d'indiquer quel
		# est le nom du domaine, ou l'adresse IP ciblee par
		# le groupe. 
		server_name localhost;

		ssl on;
		ssl_protocols TLSv1.2 TLSv1.3;

		ssl_certificate /etc/ssl/certs/inception.crt;
		ssl_certificate_key /etc/ssl/private/inception.key;

		# force https-redirects
		if ($scheme = http)	{
        	return 301 https://$server_name$request_uri;
    	}

		# tous les documents convernes 
		# par ce groupe se trouvent dans          
		# le dossier /var/www/wordpress
		root /var/www/wordpress;

		# la page d'accueil est designee par index. 
		# Pourquoi plusieurs fichiers ?
		# Les arguments sont tries par ordre de priorite.
		# Plus ils sont proche de la directive, plus ils sont
		# prio. 
		index index.php index.html index.htm;

		# la directive location fait referenece au chemin relatif
		# qui est dans l'URL (URI). Ici, on met juste / ->
		# ca veut dire que toutes les requetes dont
		# l'URI commence par / seront traitees.
		location / {
			#first attempt tp serve request file, 
			# then as directory, then fall back to displaying a 404
			try_files $uri $uri/ =404;
		}

		# pass the PHP scripts to FastCGI (PHP-FPM)
		# server listening on wordpress:9000
		# ~ --> sensible a la casse (nginx n'entrera
		# pas dans ce bloc si l'uri finit par PHP et non php) 
		location ~ \.php$ {
			include snippets/fastcgi-php.conf;
			# Comment renvoyer les requetes php sur le port 9000
			fastcgi_pass wordpress:9000;
		}
	}
}